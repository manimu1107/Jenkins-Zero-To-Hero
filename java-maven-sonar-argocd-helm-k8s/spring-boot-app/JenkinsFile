pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    
    environment {
        SONAR_URL = "http://3.90.200.18:9000"
        DOCKER_REPO = "manimu1107/manimaa"
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out the code'
                checkout scm
            }
        }

        stage('Build and Test') {
            steps {
                echo 'Building and testing the project'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            steps {
                echo 'Running SonarQube analysis'
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}"
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                echo 'Building and pushing Docker image'
                script {
                    def dockerImage = docker.build("${DOCKER_REPO}:${BUILD_NUMBER}")

                    // Login to Docker registry
                    withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                        sh "echo \${DOCKERHUB_PASSWORD} | docker login -u \${DOCKERHUB_USERNAME} --password-stdin"
                    }

                    // Push the Docker image
                    dockerImage.push()
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                echo 'Updating deployment file and pushing changes to Git'
                script {
                    def gitCommitMessage = "Update deployment image to version ${BUILD_NUMBER}"

                    sh '''
                        git config user.email "abhishek.xyz@gmail.com"
                        git config user.name "Abhishek Veeramalla"
                        git checkout -B main
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "${gitCommitMessage}"
                        git push https://${GITHUB_TOKEN}@github.com/manimu1107/Jenkins-Zero-To-Hero HEAD:main
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded! Additional success steps can be added here.'
        }
        failure {
            echo 'Pipeline failed! Additional failure steps can be added here.'
        }
    }
}
